{"version":3,"file":"lib.modern.mjs","sources":["../src/components/DataViewer.js","../src/components/DataEditor.js"],"sourcesContent":["/*\r\n * Copyright © 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport React, {useState, Fragment} from 'react';\r\nimport {cellEdit, casUpdateRow, scrollTable} from '@sassoftware/restafedit';\r\n\r\nfunction DataViewer (props) {\r\n    const {appEnv}   = props;\r\n    const [modFlag, setModFlag] = useState(true);\r\n    const [status, setStatus] = useState(null);\r\n\r\n    const _handleErrors = (err) => {\r\n        setStatus({status: 2, msg: err});\r\n    };\r\n\r\n    // scroll based on pagination data from previous fetch\r\n    const _onScroll = (direction) => {\r\n        scrollTable (direction, appEnv) \r\n            .then (r => {\r\n                setModFlag(!modFlag); \r\n                setStatus({status: 0, msg: null});\r\n            })\r\n            .catch(err => {\r\n                _handleErrors(err);\r\n            });\r\n    };\r\n\r\n    const _onEdit = (name, value, rowIndex, data) => {\r\n        cellEdit (name, value, rowIndex, data, appEnv)\r\n         .then (r => {\r\n            setModFlag(!modFlag); \r\n            setStatus(null);\r\n         })\r\n         .catch(err => {\r\n            _handleErrors(err);\r\n            setStatus(err);\r\n        });\r\n         \r\n    };\r\n\r\n    // Save only modified rows\r\n    // TBD: propagate messages to UI app\r\n    const _onSave = (result) => {\r\n        casUpdateRow(result, appEnv)\r\n            .then((r) => {\r\n                setStatus({status: 0, msg: r});\r\n            })\r\n            .catch((err) => setStatus({status: 2, msg: err}));\r\n    };\r\n    debugger;\r\n    const V = appEnv.appControl.appData.getViewer(appEnv.appControl.appData);\r\n    debugger;\r\n    return (\r\n            <Fragment>\r\n                <V \r\n                    onEdit={_onEdit}\r\n                    onScroll={_onScroll}\r\n                    onSave={_onSave}\r\n                    status={status}\r\n                    appEnv={appEnv}\r\n                />\r\n            </Fragment>\r\n        );\r\n}\r\nexport default DataViewer;\r\n","/* eslint-disable no-throw-literal */\r\n/*\r\n * Copyright © 2021, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport React, { useEffect, useState} from 'react';\r\nimport {setup, scrollTable} from '@sassoftware/restafedit';\r\nimport DataViewer from './DataViewer';\r\n\r\nfunction DataEditor (props) {\r\n    debugger;\r\n    const { viyaConnection, appControl} = props;\r\n    const [state, setState] = useState({});\r\n\r\n    //\r\n    // Keeping it simple - convert to suspense, lazy etc at some point\r\n    //\r\n    const initialize = async () => {\r\n        debugger;\r\n        let r = await setup(viyaConnection, appControl);\r\n        await scrollTable('first', r);\r\n        return r;\r\n    };\r\n\r\n    useEffect(() => {\r\n        initialize()\r\n            .then((r) => {\r\n                setState(r);\r\n            })\r\n            .catch((err) => {\r\n                throw new Error (JSON.stringify(err));\r\n            });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    let show = null;\r\n    if (state.session != null) {\r\n        show =\r\n            <div id=\"page-wrap\" key={Date()}>\r\n                <DataViewer appEnv={state} key={state.id} />\r\n            </div>;\r\n    }\r\n    return show;\r\n}\r\nexport default DataEditor;\r\n"],"names":["DataViewer","props","appEnv","modFlag","setModFlag","useState","status","setStatus","_handleErrors","err","msg","V","appControl","appData","getViewer","_jsx","Fragment","children","onEdit","name","value","rowIndex","data","cellEdit","then","r","catch","onScroll","direction","scrollTable","onSave","result","casUpdateRow","DataEditor","viyaConnection","state","setState","useEffect","async","setup","initialize","JSON","stringify","show","session","id","Date"],"mappings":"uMAQA,SAASA,EAAYC,GACjB,MAAMC,OAACA,GAAYD,GACZE,EAASC,GAAcC,GAAS,IAChCC,EAAQC,GAAaF,EAAS,MAE/BG,EAAiBC,IACnBF,EAAU,CAACD,OAAQ,EAAGI,IAAKD,GAAlB,EAsCPE,EAAIT,EAAOU,WAAWC,QAAQC,UAAUZ,EAAOU,WAAWC,sBAEhE,OACQE,EAACC,EAAD,CAAAC,sBACIF,EAACJ,EACG,CAAAO,OA5BA,CAACC,EAAMC,EAAOC,EAAUC,KACpCC,EAAUJ,EAAMC,EAAOC,EAAUC,EAAMpB,GACrCsB,KAAMC,IACJrB,GAAYD,GACZI,EAAU,KACZ,GACAmB,MAAMjB,IACJD,EAAcC,GACdF,EAAUE,EAAD,EAPb,EA4BYkB,SAxCGC,IACfC,EAAaD,EAAW1B,GACnBsB,KAAMC,IACHrB,GAAYD,GACZI,EAAU,CAACD,OAAQ,EAAGI,IAAK,SAE9BgB,MAAMjB,IACHD,EAAcC,EACjB,EACR,EAgCeqB,OAfCC,IACbC,EAAaD,EAAQ7B,GAChBsB,KAAMC,IACHlB,EAAU,CAACD,OAAQ,EAAGI,IAAKe,GAC9B,GACAC,MAAOjB,GAAQF,EAAU,CAACD,OAAQ,EAAGI,IAAKD,IAJ/C,EAeYH,OAAQA,EACRJ,OAAQA,KAI3B,CCvDD,SAAS+B,EAAYhC,GAEjB,MAAMiC,eAAEA,EAAFtB,WAAkBA,GAAcX,GAC/BkC,EAAOC,GAAY/B,EAAS,CAAA,GAYnCgC,EAAU,KAPSC,WAEf,IAAIb,QAAUc,EAAML,EAAgBtB,GAEpC,eADkB,QAASa,GAE9BA,GAGGe,GACKhB,KAAMC,IACHW,EAASX,EAAD,GAEXC,MAAOjB,IACJ,MAAM,UAAWgC,KAAKC,UAAUjC,GAA1B,EAGjB,EAAE,IAEH,IAAIkC,EAAO,KAOX,OANqB,MAAjBR,EAAMS,UACND,eACI5B,EAAK,MAAA,CAAA8B,GAAG,kCACJ9B,EAACf,EAAW,CAAAE,OAAQiC,GAAYA,EAAMU,KADjBC,SAKpCH,CAAA"}