{"version":3,"file":"index.umd.js","sources":["../src/components/DataViewer.js","../src/components/DataEditor.js"],"sourcesContent":["/*\r\n * Copyright © 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport React, {useState, Fragment} from 'react';\r\nimport {cellEdit, updateTableRows, scrollTable} from '@sassoftware/restafedit';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DataViewer (props) {\r\n    const {appEnv}   = props;\r\n    const [modFlag, setModFlag] = useState(true);\r\n    const [status, setStatus] = useState(null);\r\n\r\n    const _handleErrors = (err) => {\r\n        setStatus({status: 2, msg: err});\r\n    };\r\n\r\n    // scroll based on pagination data from previous fetch\r\n    const _onScroll = (direction) => {\r\n        scrollTable (direction, appEnv) \r\n            .then (r => {\r\n                setModFlag(!modFlag); \r\n                setStatus({status: 0, msg: null});\r\n            })\r\n            .catch(err => {\r\n                _handleErrors(err);\r\n            });\r\n    };\r\n\r\n    const _onEdit = (name, value, rowIndex, data) => {\r\n        cellEdit (name, value, rowIndex, data, appEnv)\r\n         .then (r => {\r\n            setModFlag(!modFlag); \r\n            setStatus(null);\r\n         })\r\n         .catch(err => {\r\n            _handleErrors(err);\r\n            setStatus(err);\r\n        });\r\n         \r\n    };\r\n\r\n    // Save only modified rows\r\n    // TBD: propagate messages to UI app\r\n    const _onSave = (result) => {\r\n        updateTableRows(result, appEnv)\r\n            .then((r) => {\r\n                setStatus({status: 0, msg: r});\r\n            })\r\n            .catch((err) => setStatus({status: 2, msg: err}));\r\n    };\r\n    debugger;\r\n    const V = appEnv.appControl.appData.getViewer(appEnv.appControl.appData);\r\n    debugger;\r\n    return (\r\n            <Fragment>\r\n                <V \r\n                    onEdit={_onEdit}\r\n                    onScroll={_onScroll}\r\n                    onSave={_onSave}\r\n                    status={status}\r\n                    appEnv={appEnv}\r\n                />\r\n            </Fragment>\r\n        );\r\n}\r\nDataViewer.propTypes = {\r\n    /** Application control */\r\n    appEnv: PropTypes.object.isRequired,\r\n\r\n};\r\nexport default DataViewer;\r\n","/* eslint-disable no-throw-literal */\r\n/*\r\n * Copyright © 2021, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport React, { useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {setup, scrollTable} from '@sassoftware/restafedit';\r\nimport DataViewer from './DataViewer';\r\n\r\nfunction DataEditor (props) {\r\n    debugger;\r\n    const { viyaConnection, appControl} = props;\r\n    const [state, setState] = useState({});\r\n\r\n    //\r\n    // Keeping it simple - convert to suspense, lazy etc at some point\r\n    //\r\n    const initialize = async () => {\r\n        debugger;\r\n        let r = await setup(viyaConnection, appControl);\r\n        await scrollTable('first', r);\r\n        return r;\r\n    };\r\n\r\n    useEffect(() => {\r\n        initialize()\r\n            .then((r) => {\r\n                setState(r);\r\n            })\r\n            .catch((err) => {\r\n                throw new Error (JSON.stringify(err));\r\n            });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    let show = null;\r\n    if (state.session != null) {\r\n        show =\r\n            <div id=\"page-wrap\" key={Date()}>\r\n                <DataViewer appEnv={state} key={state.id} />\r\n            </div>;\r\n    }\r\n    return show;\r\n}\r\nDataEditor.propTypes = {\r\n    /** Information to setup connection to Viya */\r\n    viyaConnection: PropTypes.object.isRequired,\r\n\r\n/** Information to setup application */\r\n    appControl: PropTypes.object.isRequired,\r\n\r\n};\r\nexport default DataEditor;\r\n"],"names":["DataViewer","props","appEnv","useState","modFlag","_useState","setModFlag","status","_useState2","setStatus","_handleErrors","err","msg","appControl","appData","getViewer","React","createElement","Fragment","V","onEdit","name","value","rowIndex","data","cellEdit","then","r","catch","onScroll","direction","scrollTable","onSave","result","updateTableRows","DataEditor","viyaConnection","state","setState","useEffect","initialize","setup","JSON","stringify","show","session","id","key","Date","propTypes","PropTypes","object","isRequired"],"mappings":"sfASA,SAAAA,EAAqBC,GACjB,IAAOC,EAAYD,EAAZC,SACuBC,EAAAA,UAAS,GAAhCC,EAAPC,EAAA,GAAgBC,EAAhBD,EAAA,KAC4BF,WAAS,MAA9BI,EAAPC,EAAA,GAAeC,EAAfD,EAAA,GAEmBE,EAAG,SAACC,GACnBF,EAAU,CAACF,OAAQ,EAAGK,IAAKD,GAC9B,IAqCST,EAAOW,WAAWC,QAAQC,UAAUb,EAAOW,WAAWC,sBAEhE,OACQE,UAAAC,cAACC,EAADA,SACI,kBAAAF,EAAAA,QAAAC,cAACE,EAAD,CACIC,OA5BA,SAACC,EAAMC,EAAOC,EAAUC,GACpCC,EAAAA,SAAUJ,EAAMC,EAAOC,EAAUC,EAAMtB,GACrCwB,KAAM,SAAAC,GACJrB,GAAYF,GACZK,EAAU,KACZ,GACAmB,MAAM,SAAAjB,GACJD,EAAcC,GACdF,EAAUE,EACb,EAEJ,EAkBekB,SAxCE,SAACC,GACfC,EAAAA,YAAaD,EAAW5B,GACnBwB,KAAM,SAAAC,GACHrB,GAAYF,GACZK,EAAU,CAACF,OAAQ,EAAGK,IAAK,MAC9B,GACAgB,MAAM,SAAAjB,GACHD,EAAcC,EACjB,EACR,EAgCeqB,OAfA,SAACC,GACbC,EAAeA,gBAACD,EAAQ/B,GACnBwB,KAAK,SAACC,GACHlB,EAAU,CAACF,OAAQ,EAAGK,IAAKe,GAC9B,GACAC,MAAM,SAACjB,GAAQF,OAAAA,EAAU,CAACF,OAAQ,EAAGK,IAAKD,GAApC,EACd,EAUeJ,OAAQA,EACRL,OAAQA,IAI3B,CCvDD,SAAAiC,EAAqBlC,GAEjB,IAAQmC,EAA8BnC,EAA9BmC,eAAgBvB,EAAcZ,EAAdY,WACEV,EAAAA,EAAQA,SAAC,CAAD,GAA3BkC,EAAPhC,EAAA,GAAciC,EAKdjC,EAAA,GAOAkC,EAAAA,UAAU,YAPJC,eAAyB,uBAEbC,EAAKA,MAACL,EAAgBvB,IAAhCc,KAAAA,SAAAA,0BACEI,EAAAA,YAAY,QAASJ,IAC3BD,KAAA,WAAA,QAJ2B,EAK9B,GALe,oCAQZc,GACKd,KAAK,SAACC,GACHW,EAASX,EACZ,GACAC,MAAM,SAACjB,GACJ,MAAM,UAAW+B,KAAKC,UAAUhC,GACnC,EAER,EAAE,IAEH,IAAIiC,EAAO,KAOX,OANqB,MAAjBP,EAAMQ,UACND,eACI5B,EAAA,QAAAC,cAAA,MAAA,CAAK6B,GAAG,YAAYC,IAAKC,qBACrBhC,EAAAA,QAACC,cAAAjB,GAAWE,OAAQmC,EAAOU,IAAKV,EAAMS,OAIrDF,CAAA,CDsBD5C,EAAWiD,UAAY,CAEnB/C,OAAQgD,EAAAA,QAAUC,OAAOC,YCvB7BjB,EAAWc,UAAY,CAEnBb,eAAgBc,UAAUC,OAAOC,WAGjCvC,WAAYqC,EAAAA,QAAUC,OAAOC"}