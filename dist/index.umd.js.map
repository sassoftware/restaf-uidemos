{"version":3,"file":"index.umd.js","sources":["../src/components/DataViewer.js","../src/index.js","../src/components/DataEditor.js"],"sourcesContent":["/*\r\n * Copyright © 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {useState, Fragment} from 'react';\r\nimport {cellEdit, casUpdateRow, scrollTable} from '@sassoftware/restafedit';\r\n\r\nfunction DataViewer (props) {\r\n    const {appEnv}   = props;\r\n    const [modFlag, setModFlag] = useState(true);\r\n    const [status, setStatus] = useState(null);\r\n\r\n    const _handleErrors = (err) => {\r\n        setStatus({status: 2, msg: err});\r\n    };\r\n\r\n    // scroll based on pagination data from previous fetch\r\n    const _onScroll = (direction) => {\r\n        scrollTable (direction, appEnv) \r\n            .then (r => {\r\n                setModFlag(!modFlag); \r\n                setStatus({status: 0, msg: null});\r\n            })\r\n            .catch(err => {\r\n                _handleErrors(err);\r\n            });\r\n    };\r\n\r\n    const _onEdit = (name, value, rowIndex, data) => {\r\n        cellEdit (name, value, rowIndex, data, appEnv)\r\n         .then (r => {\r\n            setModFlag(!modFlag); \r\n            setStatus(null);\r\n         })\r\n         .catch(err => {\r\n            _handleErrors(err);\r\n            setStatus(err);\r\n        });\r\n         \r\n    };\r\n\r\n    // Save only modified rows\r\n    // TBD: propagate messages to UI app\r\n    const _onSave = (result) => {\r\n        casUpdateRow(result, appEnv)\r\n            .then((r) => {\r\n                setStatus({status: 0, msg: r});\r\n            })\r\n            .catch((err) => setStatus({status: 2, msg: err}));\r\n    };\r\n    debugger;\r\n    const V = appEnv.appControl.appData.getViewer(appEnv.appControl.appData);\r\n    debugger;\r\n    return (\r\n            <Fragment>\r\n                <V \r\n                    onEdit={_onEdit}\r\n                    onScroll={_onScroll}\r\n                    onSave={_onSave}\r\n                    status={status}\r\n                    appEnv={appEnv}\r\n                />\r\n            </Fragment>\r\n        );\r\n}\r\nexport default DataViewer;\r\n","import DataEditor from './components/DataEditor';\r\nimport DataViewer from './components/DataViewer';\r\nexport default {DataEditor, DataViewer};","/* eslint-disable no-throw-literal */\r\n/*\r\n * Copyright © 2021, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { useEffect, useState} from 'react';\r\nimport {setup, scrollTable} from '@sassoftware/restafedit';\r\nimport DataViewer from './DataViewer';\r\n\r\nfunction DataEditor (props) {\r\n    debugger;\r\n    const { viyaConnection, appControl} = props;\r\n    const [state, setState] = useState({});\r\n\r\n    //\r\n    // Keeping it simple - convert to suspense, lazy etc at some point\r\n    //\r\n    const initialize = async () => {\r\n        debugger;\r\n        let r = await setup(viyaConnection, appControl);\r\n        await scrollTable('first', r);\r\n        return r;\r\n    };\r\n\r\n    useEffect(() => {\r\n        initialize()\r\n            .then((r) => {\r\n                setState(r);\r\n            })\r\n            .catch((err) => {\r\n                throw new Error (JSON.stringify(err));\r\n            });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    let show = null;\r\n    if (state.session != null) {\r\n        show =\r\n            <div id=\"page-wrap\" key={Date()}>\r\n                <DataViewer appEnv={state} key={state.id} />\r\n            </div>;\r\n    }\r\n    return show;\r\n}\r\nexport default DataEditor;\r\n"],"names":["DataViewer","props","appEnv","useState","modFlag","setModFlag","_useState","_useState2","status","setStatus","_handleErrors","err","msg","V","appControl","appData","getViewer","h","Fragment","onEdit","name","value","rowIndex","data","cellEdit","then","r","catch","onScroll","direction","scrollTable","onSave","result","casUpdateRow","DataEditor","viyaConnection","state","setState","useEffect","initialize","setup","Error","JSON","stringify","session","show","id","key","Date"],"mappings":"yUAQA,SAAAA,EAAqBC,GACjB,MAAmBA,EAAZC,OACuBC,EAAAA,EAAQA,UAAC,GAAhCC,EAASC,EAAAA,GAAAA,EAChBC,EAAA,GAAAC,EAA4BJ,EAAQA,SAAC,MAA9BK,EAAPD,EAAA,GAAeE,EAEfF,EAAA,GAAmBG,EAAG,SAACC,GACnBF,EAAU,CAACD,OAAQ,EAAGI,IAAKD,GAC9B,EAqCME,EAAGX,EAAOY,WAAWC,QAAQC,UAAUd,EAAOY,WAAWC,SAEhE,OACSE,EAAAC,EAADA,SACI,KAAAD,EAACJ,EACG,CAAAM,OA5BA,SAACC,EAAMC,EAAOC,EAAUC,GACpCC,EAAAA,SAAUJ,EAAMC,EAAOC,EAAUC,EAAMrB,GACrCuB,KAAM,SAAAC,GACJrB,GAAYD,GACZK,EAAU,KACZ,GACAkB,MAAM,SAAAhB,GACJD,EAAcC,GACdF,EAAUE,EACb,EAEJ,EAkBeiB,SAxCE,SAACC,GACfC,EAAAA,YAAaD,EAAW3B,GACnBuB,KAAM,SAAAC,GACHrB,GAAYD,GACZK,EAAU,CAACD,OAAQ,EAAGI,IAAK,MAC9B,GACAe,MAAM,SAAAhB,GACHD,EAAcC,EACjB,EACR,EAgCeoB,OAfA,SAACC,GACbC,EAAAA,aAAaD,EAAQ9B,GAChBuB,KAAK,SAACC,GACHjB,EAAU,CAACD,OAAQ,EAAGI,IAAKc,GAC9B,GACAC,MAAM,SAAChB,GAAQF,OAAAA,EAAU,CAACD,OAAQ,EAAGI,IAAKD,GAApC,EACd,EAUeH,OAAQA,EACRN,OAAQA,IAI3B,OC/Dc,CAACgC,WCQhB,SAAqBjC,GAEjB,MAAsCA,EAA9BkC,eAAgBrB,EAAcb,EAAda,WACEX,EAAAA,EAAAA,SAAS,CAAD,GAA3BiC,EAAOC,EAAAA,GAAAA,OAYdC,EAAAA,UAAU,YAPJC,eAAyB,uBAEbC,EAAKA,MAACL,EAAgBrB,IAFTW,KAAA,SAEvBC,GACEI,OAAAA,QAAAA,QAAAA,EAAWA,YAAC,QAASJ,IAC3BD,KAAA,WAAA,QAJ2B,EAK9B,GALe,oCAQZc,GACKd,KAAK,SAACC,GACHW,EAASX,EACZ,GACAC,MAAM,SAAChB,GACJ,MAAU8B,IAAAA,MAAOC,KAAKC,UAAUhC,GACnC,EAER,EAAE,IAEH,MAAW,KAOX,OANqB,MAAjByB,EAAMQ,UACNC,EACI5B,EAAA,MAAA,CAAK6B,GAAG,YAAYC,IAAKC,QACrB/B,EAACjB,GAAWE,OAAQkC,EAAOW,IAAKX,EAAMU,OAIrDD,CAAA,ED1C2B7C,WAAAA"}