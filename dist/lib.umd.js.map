{"version":3,"file":"lib.umd.js","sources":["../src/components/DataViewer.js","../src/components/DataEditor.js"],"sourcesContent":["/*\r\n * Copyright © 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport React, {useState, Fragment} from 'react';\r\nimport {cellEdit, casUpdateRow, scrollTable} from '@sassoftware/restafedit';\r\n\r\nfunction DataViewer (props) {\r\n    const {appEnv}   = props;\r\n    const [modFlag, setModFlag] = useState(true);\r\n    const [status, setStatus] = useState(null);\r\n\r\n    const _handleErrors = (err) => {\r\n        setStatus({status: 2, msg: err});\r\n    };\r\n\r\n    // scroll based on pagination data from previous fetch\r\n    const _onScroll = (direction) => {\r\n        scrollTable (direction, appEnv) \r\n            .then (r => {\r\n                setModFlag(!modFlag); \r\n                setStatus({status: 0, msg: null});\r\n            })\r\n            .catch(err => {\r\n                _handleErrors(err);\r\n            });\r\n    };\r\n\r\n    const _onEdit = (name, value, rowIndex, data) => {\r\n        cellEdit (name, value, rowIndex, data, appEnv)\r\n         .then (r => {\r\n            setModFlag(!modFlag); \r\n            setStatus(null);\r\n         })\r\n         .catch(err => {\r\n            _handleErrors(err);\r\n            setStatus(err);\r\n        });\r\n         \r\n    };\r\n\r\n    // Save only modified rows\r\n    // TBD: propagate messages to UI app\r\n    const _onSave = (result) => {\r\n        casUpdateRow(result, appEnv)\r\n            .then((r) => {\r\n                setStatus({status: 0, msg: r});\r\n            })\r\n            .catch((err) => setStatus({status: 2, msg: err}));\r\n    };\r\n    debugger;\r\n    const V = appEnv.appControl.appData.getViewer(appEnv.appControl.appData);\r\n    debugger;\r\n    return (\r\n            <Fragment>\r\n                <V \r\n                    onEdit={_onEdit}\r\n                    onScroll={_onScroll}\r\n                    onSave={_onSave}\r\n                    status={status}\r\n                    appEnv={appEnv}\r\n                />\r\n            </Fragment>\r\n        );\r\n}\r\nexport default DataViewer;\r\n","/* eslint-disable no-throw-literal */\r\n/*\r\n * Copyright © 2021, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport React, { useEffect, useState} from 'react';\r\nimport {setup, scrollTable} from '@sassoftware/restafedit';\r\nimport DataViewer from './DataViewer';\r\n\r\nfunction DataEditor (props) {\r\n    debugger;\r\n    const { viyaConnection, appControl} = props;\r\n    const [state, setState] = useState({});\r\n\r\n    //\r\n    // Keeping it simple - convert to suspense, lazy etc at some point\r\n    //\r\n    const initialize = async () => {\r\n        debugger;\r\n        let r = await setup(viyaConnection, appControl);\r\n        await scrollTable('first', r);\r\n        return r;\r\n    };\r\n\r\n    useEffect(() => {\r\n        initialize()\r\n            .then((r) => {\r\n                setState(r);\r\n            })\r\n            .catch((err) => {\r\n                throw new Error (JSON.stringify(err));\r\n            });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    let show = null;\r\n    if (state.session != null) {\r\n        show =\r\n            <div id=\"page-wrap\" key={Date()}>\r\n                <DataViewer appEnv={state} key={state.id} />\r\n            </div>;\r\n    }\r\n    return show;\r\n}\r\nexport default DataEditor;\r\n"],"names":["DataViewer","props","appEnv","useState","modFlag","setModFlag","_useState","_useState2","status","setStatus","err","msg","V","appControl","appData","getViewer","_jsx","jsx","Fragment","children","onEdit","name","value","rowIndex","data","cellEdit","then","r","catch","_handleErrors","onScroll","direction","scrollTable","onSave","result","casUpdateRow","viyaConnection","state","setState","useEffect","setup","e","Promise","reject","initialize","Error","JSON","stringify","show","session","id","Date"],"mappings":"iZAQA,SAAAA,EAAqBC,GACjB,IAAOC,EAAYD,EAAZC,OACuBC,EAAAA,YAAS,GAAhCC,EAASC,EAAAA,GAAAA,EAChBC,EAAA,GAAAC,EAA4BJ,EAAAA,SAAS,MAA9BK,EAAQC,EAAAA,GAAAA,EAEfF,EAAA,KAAsB,SAACG,GACnBD,EAAU,CAACD,OAAQ,EAAGG,IAAKD,GAC9B,EAqCKE,EAAIV,EAAOW,WAAWC,QAAQC,UAAUb,EAAOW,WAAWC,sBAEhE,OACQE,EAAAC,IAACC,WAAD,CAAAC,sBACIH,MAACJ,EAAD,CACIQ,OA5BA,SAACC,EAAMC,EAAOC,EAAUC,GACpCC,EAAQA,SAAEJ,EAAMC,EAAOC,EAAUC,EAAMtB,GACrCwB,KAAM,SAAAC,GACJtB,GAAYD,GACZK,EAAU,KACZ,GACAmB,MAAM,SAAAlB,GACJmB,EAAcnB,GACdD,EAAUC,EACb,EAEJ,EAkBeoB,SAxCE,SAACC,GACfC,EAAWA,YAAED,EAAW7B,GACnBwB,KAAM,SAAAC,GACHtB,GAAYD,GACZK,EAAU,CAACD,OAAQ,EAAGG,IAAK,MAC9B,GACAiB,MAAM,SAAAlB,GACHmB,EAAcnB,EACjB,EACR,EAgCeuB,OAfA,SAACC,GACbC,EAAYA,aAACD,EAAQhC,GAChBwB,KAAK,SAACC,GACHlB,EAAU,CAACD,OAAQ,EAAGG,IAAKgB,GAC9B,GACAC,MAAM,SAAClB,GAAD,OAAkBD,EAAC,CAACD,OAAQ,EAAGG,IAAKD,GAApC,EACd,EAUeF,OAAQA,EACRN,OAAQA,KAI3B,cCvDD,SAAqBD,GAEjB,IAAQmC,EAA8BnC,EAA9BmC,eAAgBvB,EAAcZ,EAAdY,aACEV,EAAAA,SAAS,CAAD,GAA3BkC,EAAP/B,EAAA,GAAcgC,EAAdhC,EAAA,GAYAiC,YAAU,YAPM,WAAe,IAAA,OAEbC,QAAAA,QAAAA,EAAAA,MAAMJ,EAAgBvB,IAAhCc,KAAAA,SAAAA,0BACEK,EAAAA,YAAY,QAASL,IAHAD,KAAA,WAI3B,OAJ2BC,CAAA,EAAA,EAA/B,CAAgB,MAAhBc,GAAA,OAAAC,QAAAC,OAAAF,EAAA,CAAA,EAQIG,GACKlB,KAAK,SAACC,GACHW,EAASX,EACZ,GACAC,MAAM,SAAClB,GACJ,MAAM,IAAAmC,MAAWC,KAAKC,UAAUrC,GACnC,EAER,EAAE,IAEH,IAAIsC,EAAO,KAOX,OANqB,MAAjBX,EAAMY,UACND,eACIhC,EAAAA,WAAKkC,GAAG,YACJ/B,sBAAAH,MAAChB,EAAD,CAAYE,OAAQmC,GAAYA,EAAMa,KADjBC,SAKpCH,CAAA"}